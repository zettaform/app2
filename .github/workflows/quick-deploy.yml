name: Quick Deploy

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        
    - name: Quick Deploy to EC2
      run: |
        echo "🚀 QUICK DEPLOYMENT TO EC2"
        echo "==========================="
        echo ""
        
        # Test SSH connection
        echo "🔌 Testing SSH connection..."
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "echo '✅ SSH connection successful'"
        echo ""
        
        # Deploy simple test app
        echo "📦 Deploying simple test application..."
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "
          echo '🔧 Setting up test application...'
          
          # Stop any existing processes
          pkill -f 'node.*app.js' || true
          pkill -f 'pm2' || true
          
          # Create test app directory
          mkdir -p /home/ec2-user/test-app
          cd /home/ec2-user/test-app
          
          # Create simple Express app
          cat > app.js << 'EOF'
const express = require('express');
const app = express();
const PORT = 3001;

app.get('/', (req, res) => {
  res.json({ 
    message: 'Hello from EC2!', 
    timestamp: new Date().toISOString(),
    status: 'running'
  });
});

app.get('/health', (req, res) => {
  res.json({ 
    status: 'healthy', 
    timestamp: new Date().toISOString() 
  });
});

app.listen(PORT, '0.0.0.0', () => {
  console.log(\`Server running on port \${PORT}\`);
});
EOF
          
          # Create package.json
          cat > package.json << 'EOF'
{
  \"name\": \"test-app\",
  \"version\": \"1.0.0\",
  \"description\": \"Simple test app\",
  \"main\": \"app.js\",
  \"scripts\": {
    \"start\": \"node app.js\"
  },
  \"dependencies\": {
    \"express\": \"^4.18.2\"
  }
}
EOF
          
          # Install Node.js if needed
          if ! command -v node &> /dev/null; then
            echo 'Installing Node.js...'
            curl -fsSL https://rpm.nodesource.com/setup_18.x | sudo bash -
            sudo yum install -y nodejs
          fi
          
          # Install dependencies
          echo 'Installing dependencies...'
          npm install
          
          # Start the app
          echo 'Starting test application...'
          nohup node app.js > app.log 2>&1 &
          
          # Wait a moment
          sleep 5
          
          # Check if it's running
          if pgrep -f 'node.*app.js' > /dev/null; then
            echo '✅ Test application is running'
            echo '📋 Process info:'
            ps aux | grep 'node.*app.js' | grep -v grep
            echo ''
            echo '📋 Application log:'
            cat app.log
            echo ''
            echo '🌐 Testing local connectivity...'
            curl -f http://localhost:3001/health || echo 'Health check failed'
          else
            echo '❌ Test application failed to start'
            echo '📋 Error log:'
            cat app.log
          fi
        "
        
        echo ""
        echo "🎯 Quick deployment completed!"
        echo ""
        echo "🌐 Test application should be running on: http://${{ secrets.EC2_HOST }}:3001"
        echo "🔍 Health check: http://${{ secrets.EC2_HOST }}:3001/health"